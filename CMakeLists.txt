cmake_minimum_required (VERSION 3.15)
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "")
project(PokeHeartGold)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

enable_language(ASM)

if(APPLE)
    include_directories(/usr/local/include)
endif(APPLE)

add_compile_options(-fms-extensions)

# TODO: Create custom commands
SET(GAME_SRC_DIR ${CMAKE_SOURCE_DIR}/src/)
SET(GAME_ASM_DIR ${CMAKE_SOURCE_DIR}/asm/)
SET(LIBS_SRC_DIR ${CMAKE_SOURCE_DIR}/lib/)
SET(LIBS_ASM_DIR ${CMAKE_SOURCE_DIR}/lib/)
file(GLOB_RECURSE C_SOURCES_GAME_REL RELATIVE ${GAME_SRC_DIR} "*.c")
file(GLOB_RECURSE C_SOURCES_LIBS_REL RELATIVE ${LIBS_SRC_DIR} "*.c")
file(GLOB_RECURSE CXX_SOURCES_LIBS_REL RELATIVE ${LIBS_SRC_DIR} "*.cpp")
file(GLOB_RECURSE ASM_SOURCES_GAME_REL RELATIVE ${GAME_ASM_DIR} "*.s")
file(GLOB_RECURSE ASM_SOURCES_LIBS_REL RELATIVE ${LIBS_ASM_DIR} "*.s")
list(TRANSFORM C_SOURCES_GAME_REL PREPEND ${GAME_SRC_DIR} OUTPUT_VARIABLE C_SOURCES_GAME)
list(TRANSFORM C_SOURCES_LIBS_REL PREPEND ${LIBS_SRC_DIR} OUTPUT_VARIABLE C_SOURCES_LIBS)
list(TRANSFORM CXX_SOURCES_LIBS_REL PREPEND ${LIBS_SRC_DIR} OUTPUT_VARIABLE CXX_SOURCES_LIBS)
list(TRANSFORM ASM_SOURCES_GAME_REL PREPEND ${GAME_ASM_DIR} OUTPUT_VARIABLE ASM_SOURCES_GAME)
list(TRANSFORM ASM_SOURCES_LIBS_REL PREPEND ${LIBS_ASM_DIR} OUTPUT_VARIABLE ASM_SOURCES_GAME)
set(SOURCES ${C_SOURCES_GAME} ${C_SOURCES_LIBS} ${CXX_SOURCES_LIBS} ${ASM_SOURCES_GAME} ${ASM_SOURCES_GAME})

foreach(SRC IN LISTS C_SOURCES_GAME C_SOURCES_LIBS)
    # add_custom_command(OUTPUT ${CMAKE_BUILD_DIR}/${SRC}.o)
endforeach()

add_executable(PokeHeartGold ${SOURCES})
target_include_directories(PokeHeartGold PRIVATE include files lib/include lib/include/cw lib/include/nitro lib/include/nnsys lib/include/nitro/os include/library)
target_compile_definitions(PokeHeartGold PUBLIC __CLION_IDE__ SDK_ARM9)
target_compile_options(PokeHeartGold PRIVATE -include ${CMAKE_CURRENT_SOURCE_DIR}/include/global.h -Wimplicit -Werror)
